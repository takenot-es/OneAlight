//Need this to run calculations later in the grid.
@use 'sass:math';

//Push
@for $i from 1 through $grid--columns {
    .push--#{$i} {
        margin-left: math.percentage(math.div($i, $grid--columns));
    }
}


//Pull
@for $i from 1 through $grid--columns {
    .pull--#{$i} {
        margin-right: math.percentage(math.div($i, $grid--columns));
    }
}

//Push Responsive
@each $breakpoint, $breakpoint-size in $grid-breakpoints {
    @each $size, $grid-size in $grid-max-width {
        @if $breakpoint == $size {
            @media screen and (min-width: $breakpoint-size) {
                @for $i from 1 through $grid--columns {
                    .push--#{$size}-#{$i} {
                        margin-left: math.percentage(math.div($i, $grid--columns));
                    }
                }
            }
        }
    }
}

//Pull Responsive
@each $breakpoint, $breakpoint-size in $grid-breakpoints {
    @each $size, $grid-size in $grid-max-width {
        @if $breakpoint == $size {
            @media screen and (min-width: $breakpoint-size) {
                @for $i from 1 through $grid--columns {
                    .pull--#{$size}-#{$i} {
                        margin-right: math.percentage(math.div($i, $grid--columns));
                    }
                }
            }
        }
    }
}

//Ordering
.order--first {
    -ms-flex-order: -1;
    order: -1;
}

.order--last {
    -ms-flex-order: 13;
    order: 13;
}

.order--0 {
    -ms-flex-order: 0;
    order: 0;
}

@for $i from 1 through $grid--columns {
    .order--#{$i} {
        -ms-flex-order: $i;
        order: $i;
    }
}


//Ordering Responsive
@each $breakpoint, $breakpoint-size in $grid-breakpoints {
    @each $size, $grid-size in $grid-max-width {
        @if $breakpoint == $size {
            @media screen and (min-width: $breakpoint-size) {

                .order--#{$size}-first {
                    -ms-flex-order: -1;
                    order: -1;
                }
                
                .order--#{$size}-last {
                    -ms-flex-order: 13;
                    order: 13;
                }
                
                .order--#{$size}-0 {
                    -ms-flex-order: 0;
                    order: 0;
                }

                @for $i from 1 through $grid--columns {
                    .order--#{$size}-#{$i} {
                        -ms-flex-order: $i;
                        order: $i;
                    }
                }
            }
        }
    }
}

//No Gutters
.no--gutters {
    margin-right: 0;
    margin-left: 0;

    > .cell,
    > [class*="cell--"] {
      padding-right: 0;
      padding-left: 0;
    }
}